name: Test action

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2.2.4
      - name: Set Node.js 16.x
        uses: actions/setup-node@v3.6.0
        with:
          cache: 'pnpm'
          node-version: 16.x
      - run: pnpm install
      - run: pnpm build
      - run: pnpm lint
  test_action:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install CLI
        uses: ./
        with:
          version: latest
        env:
          RUNNER_DEBUG: 1
      - name: Find CLI
        run: ls -lR $RUNNER_TOOL_CACHE/scw
      - name: Use CLI
        run: scw info
  test_action_usage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Use CLI
        id: cli
        uses: ./
        with:
          args: instance server-type list
          version: v2.13.0
          access-key: ${{ secrets.SCW_ACCESS_KEY }}
          secret-key: ${{ secrets.SCW_SECRET_KEY }}
          default-project-id: ${{ secrets.SCW_DEFAULT_PROJECT_ID }}
          default-organization-id: ${{ secrets.SCW_DEFAULT_ORGANIZATION_ID }}
      - name: Check output
        run: |
          [ "$( echo '${{ steps.cli.outputs.json }}' | jq -r 'type')" = "array" ]
  test_action_export_config:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install CLI and export config
        uses: ./
        with:
          export-config: true
          version: v2.13.0
          access-key: ${{ secrets.SCW_ACCESS_KEY }}
          secret-key: ${{ secrets.SCW_SECRET_KEY }}
          default-project-id: ${{ secrets.SCW_DEFAULT_PROJECT_ID }}
          default-organization-id: ${{ secrets.SCW_DEFAULT_ORGANIZATION_ID }}
      - name: Use CLI with exported config
        uses: ./
        id: cli
        with:
          args: instance server-type list
      - name: Check output
        run: |
          [ "$( echo '${{ steps.cli.outputs.json }}' | jq -r 'type')" = "array" ]
      - name: Use CLI manually with exported config
        id: cli_manual
        run: echo "json=$(scw -o json instance server-type list)" >> $GITHUB_OUTPUT
      - name: Check output
        run: |
          [ "$( echo '${{ steps.cli_manual.outputs.json }}' | jq -r 'type')" = "array" ]
      - name: Export again
        uses: ./
        with:
          export-config: true
          version: v2.13.0
          access-key: ${{ secrets.SCW_ACCESS_KEY }}
          secret-key: ${{ secrets.SCW_SECRET_KEY }}
          default-project-id: ${{ secrets.SCW_DEFAULT_PROJECT_ID }}
          default-organization-id: ${{ secrets.SCW_DEFAULT_ORGANIZATION_ID }}
  test_action_save_config:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install CLI and save config
        uses: ./
        with:
          save-config: true
          version: v2.13.0
          access-key: ${{ secrets.SCW_ACCESS_KEY }}
          secret-key: ${{ secrets.SCW_SECRET_KEY }}
          default-project-id: ${{ secrets.SCW_DEFAULT_PROJECT_ID }}
          default-organization-id: ${{ secrets.SCW_DEFAULT_ORGANIZATION_ID }}
      - name: Use CLI manually with saved config
        id: cli_manual
        run: echo "json=$(scw -o json instance server-type list)" >> $GITHUB_OUTPUT
      - name: Check output
        run: |
          [ "$( echo '${{ steps.cli_manual.outputs.json }}' | jq -r 'type')" = "array" ]
      - name: Check CLI config
        uses: ./
        with:
          version: v2.13.0
          args: config info
        env:
          RUNNER_DEBUG: true
      - name: Use CLI with saved config
        uses: ./
        id: cli
        with:
          version: v2.13.0
          args: instance server-type list
      - name: Check output
        run: |
          [ "$( echo '${{ steps.cli.outputs.json }}' | jq -r 'type')" = "array" ]
      - name: Save again
        uses: ./
        with:
          save-config: true
          version: v2.13.0
          access-key: ${{ secrets.SCW_ACCESS_KEY }}
          secret-key: ${{ secrets.SCW_SECRET_KEY }}
          default-project-id: ${{ secrets.SCW_DEFAULT_PROJECT_ID }}
          default-organization-id: ${{ secrets.SCW_DEFAULT_ORGANIZATION_ID }}
